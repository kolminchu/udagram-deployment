apiVersion: apps/v1
kind: Deployment
metadata:
  name: udagram-feed-api-deployment
  labels:
    app: udagram-feed-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: udagram-feed-api
  template:
    metadata:
      labels:
        app: udagram-feed-api
    spec:
      containers:
      - name: udagram-feed-api
        image: scharati/udagram-api-feed:v1
        ports:
        - containerPort: 8080
        env:
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: udagram-secret
              key: POSTGRES_USERNAME
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: udagram-secret
              key: POSTGRES_PASSWORD
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: udagram-secret
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: udagram-secret
              key: AWS_SECRET_ACCESS_KEY
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: udagram-configmap
              key: POSTGRES_HOST
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
             name: udagram-configmap
             key: POSTGRES_DB
        - name: AWS_BUCKET
          valueFrom:
            configMapKeyRef:
              name: udagram-configmap
              key: AWS_BUCKET
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: udagram-configmap
              key: AWS_REGION
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: udagram-secret
              key: JWT_SECRET
        - name: URL
          valueFrom:
            configMapKeyRef:
              name: udagram-configmap
              key: URL
        - name: AWS_PROFILE
          valueFrom:
            configMapKeyRef:
              name: udagram-configmap
              key: AWS_PROFILE
        volumeMounts:
        - name : aws-secret
          mountPath: "/root/.aws"
          readOnly: true
      volumes: 
      - name: aws-secret
        secret:
          secretName: aws-secret